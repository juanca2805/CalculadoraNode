declare type EventHandler = (...args: any[]) => void;
declare type EventKey = PropertyKey | object;
export interface WeakEventController {
    emit: EventHandler;
    off: () => void;
    transfer: (context: object) => void;
}
export interface WeakEventEmitter {
    on: (context: object, key: EventKey, handler: EventHandler) => WeakEventController;
    emit: (context: object, key: EventKey, ...args: any[]) => void;
    off: (context: object, key: EventKey, handler: EventHandler) => void;
}
/**
 * Create and return a new event emitter
 */
export declare function weakEmitter(): WeakEventEmitter;
export {};
